version: '3.8'

services:
  dev:
    container_name: nestjs_api_dev
    image: nestjs-api-dev:1.0.0
    build:
      context: .
      target: development
      dockerfile: ./Dockerfile
    command: npm run start:dev
    ports:
      - '3000:3000'
      - '9229:9229'
    networks:
      - nesjs-network
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped
  postgres-prod:
    container_name: postgres
    image: postgres:12
    env_file:
      - .production.env
    environment:
      PG_DATA: /var/lib/postgresql/data
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
  prod:
    container_name: nestjs_api_prod
    image: nestjs-api-prod:1.0.0
    build:
      context: .
      target: production
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - '5000:5000'
      - '9229:9229'
    networks:
      - nesjs-network
    env_file:
      - .production.env
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - postgres-prod
    restart: unless-stopped

networks:
  nesjs-network:
volumes:
  pgdata:
